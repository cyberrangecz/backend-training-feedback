## server port for a given service, e.g., 8086
server.port=8087
## server context path (the base url for the service), e.g., /kypo-rest-feedback/api/v1
server.servlet.context-path=/kypo-training-feedback/api/v1
## microservice name which is used in user management service for identification of this service, e.g. kypo-training
microservice.name=kypo-feedback

## Allows you to specify allowed origins for CORS mapping. You could set it as, e.g., http://domain1.com, http://domain2.com, etc. The default value is: *
cors.allowed.origins=*
# calling user-and-group project, e.g., http://localhost:8084/kypo2-rest-user-and-group/api/v1
user-and-group-server.uri=http://localhost:8084/kypo2-rest-user-and-group/api/v1
#user-and-group-server.uri=https://172.19.0.22/kypo2-rest-user-and-group/api/v1
# calling kypo-elasticsearch-service, e.g., http://elastic-service:8085/kypo2-elastic/api/v1
elasticsearch-service.uri=http://localhost:8085/kypo-elasticsearch-service/api/v1

## Allows enable or disable swagger-ui.html page, e.g., true (on production environments it is recommended to set it to false)
swagger.enabled=false

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/kypo-training-feedback
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.open-in-view=false

#logging
spring.jpa.show-sql=true
logging.level.cz.muni.ics.kypo.training.feedback=DEBUG
logging.level.io.swagger.models.parameters.AbstractSerializableParameter=error
